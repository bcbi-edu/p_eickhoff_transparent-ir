{"version":3,"sources":["components/Util.js","components/SearchBar.js","App.js","serviceWorker.js","index.js"],"names":["getOptions","id","results","maxFound","i","length","result","weights","tot","key","Math","abs","round","console","log","max","opts","scales","xAxes","stacked","ticks","beginAtZero","ceil","display","gridLines","show","color","yAxes","maintainAspectRatio","legend","onClick","e","stopPropagation","tooltips","enabled","mode","createDataSet","query","colors","barData","splitQuery","replace","trim","split","Object","toConsumableArray","Set","lowerKey","toLowerCase","push","label","data","backgroundColor","borderColor","borderWidth","datasets","SearchBar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDescription","text","event","title","map","s","charAt","toUpperCase","substring","join","toTitleCase","views","state","description","strings","arr","str","slice","capitalizeFirstLetter","setState","isResults","preventDefault","handleFavorites","links","has","delete","set","value","getRandomColor","submitted","lastQuery","Map","queries","bars","session","handleChange","bind","assertThisInitialized","handleSubmit","handleBack","_this2","res","window","location","href","oldSession","name","url","RegExp","exec","decodeURIComponent","getParameterByName","axios","get","concat","then","linkMap","target","_this3","val","descriptions","updateJson","desc","react_default","a","createElement","Button","bsStyle","getStarStyles","bsSize","Glyphicon","glyph","_this4","newLinks","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","_ref3","_ref2","slicedToArray","k","v","err","return","j","className","BurgerMenu","width","r","renderButton","_this5","es","options","height","oldData","newData","sortable","key_id","w","sort","b","unshift","dict","words","random","g","onSubmit","type","onChange","style","renderSideBar","renderResults","React","Component","App","handleClick","startTime","ref","createRef","numCorrect","alert","Date","c","toString","confirm","currTime","diff","Array","from","current","parseInt","body","time","post","components_SearchBar","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e4c3639e.chunk.js","sourcesContent":["function getOptions(id, results) {\n    var maxFound = 0.0;\n    for (var i=0; i<results.length; i++) {\n        var result = results[i].weights;\n        var tot = 0.0;\n        for (var key in result) {\n          // tot += result[key];\n          tot += Math.abs(Math.round(100*result[key])/100)\n        }\n        if (tot > maxFound) {\n          console.log(\"RESULT\", result)\n        }\n        maxFound = Math.max(maxFound, tot);\n    }\n    console.log(\"MAX FOUND\", maxFound)\n\n    \n    \n    var opts = {\n      scales: {\n        xAxes: [{\n          stacked: true,\n          // ticks: {beginAtZero:true,max:tot, autoskip: true},\n          ticks: {beginAtZero:true,max:Math.ceil(maxFound), display: false},\n        // ticks: {beginAtZero:true,max:20, display: false},\n          gridLines: {\n            display: false,\n            show: false,\n            color: 'transparent'\n          },\n        }],\n        yAxes: [{\n            stacked: true,\n            gridLines: {\n                display: false,\n                show: false,\n                color: 'transparent'\n              },\n        }]\n      },\n      maintainAspectRatio: false,\n      legend: {\n        display: false,\n        onClick: (e) => e.stopPropagation()\n      },\n      tooltips: {\n          enabled: true,\n          mode: 'nearest'\n      },\n    }\n    if (id === 0) {\n        opts.legend.display = true;\n    }\n    return opts;\n  }\n  \nfunction getHeight(id) {\n    if (id === 0) {\n        return 150;\n    } else {\n        return 55;\n    }\n}\n\nfunction createDataSet(query, weights, colors) {\n  var barData = [];\n  var stripQuery = query.replace(/\\b[-.,()&$#?!\\]{}\"']+\\B|\\B[-.,()&$#!?\\]{}\"']+\\b/g, \"\");\n  // console.log(\"STRIPPED\", stripQuery);\n  var splitQuery = stripQuery.trim().split(\" \");\n  splitQuery = [...new Set(splitQuery)]; \n  for(var i=0; i<splitQuery.length; i++) {\n    if (splitQuery[i] === \" \" || splitQuery[i] === \"\") {\n      continue;\n    }\n    console.log(\"word\", splitQuery[i], weights[splitQuery[i]])\n    // console.log(\"WORD\", splitQuery[i]);\n    // var lowerKey = key.toLowerCase();\n    var lowerKey = splitQuery[i].toLowerCase();\n    barData.push({\n      label: lowerKey,\n      data: [Math.abs(Math.round(100.0*weights[splitQuery[i].toLowerCase()])/100.0)],\n      // data: [weights[splitQuery[i]]],\n      backgroundColor: [colors[lowerKey]],\n      borderColor: ['rgba(0,0,0,0)',],\n      borderWidth: 2,\n    })\n  }\n  return {datasets: barData};\n}\n\nfunction toTitleCase(text) {\n  return text.toLowerCase()\n    .split(' ')\n    .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n    .join(' ');\n}\n\nfunction capitalizeFirstLetter(strings) {\n  var arr = [];\n  for (var i=0; i<strings.length; i++) {\n    var str = strings[i].trim()\n    arr.push(str.charAt(0).toUpperCase() + str.slice(1));\n  }\n  return arr;\n}\n\n\nexport { getOptions, getHeight, createDataSet, toTitleCase , capitalizeFirstLetter}\n","import React from 'react';\n// import Suggestions from './Suggestions';\nimport {HorizontalBar} from 'react-chartjs-2';\nimport {getOptions, getHeight, createDataSet, toTitleCase, capitalizeFirstLetter} from './Util';\nimport axios from 'axios'\nimport './Styles.css';\nimport { Button, Glyphicon } from 'react-bootstrap';\nimport { slide as Menu } from 'react-burger-menu'\n// import SideBar from './SideBar';\n\nfunction getParameterByName(name, url) {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n    results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      colors: this.getRandomColor(\"\"),\n      submitted: false,\n      data: [],\n      lastQuery: \"\",\n      isResults: true,\n      title: \"\",\n      text: \"\",\n      links: new Map(),\n      queries: [],\n      views: [],\n      bars: true,\n      session: this.props.session\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit =  this.handleSubmit.bind(this);\n    this.handleDescription = this.handleDescription.bind(this);\n    this.handleBack = this.handleBack.bind(this);\n    this.handleFavorites = this.handleFavorites.bind(this);\n  }\n\n  componentDidMount() {\n    var url = window.location.href;\n    var res = url.split(\"/\");\n    for(var i=0; i<res.length; i++) {\n      if (res[i] === 'experiment') {\n        this.setState({\n          bars: false\n        })\n      }\n    }\n    var oldSession = this.state.session - 1;\n    var id = getParameterByName('id');\n    if (id !== null) {\n      axios.get(`https://ir-sim.herokuapp.com/prevLinks?session=${this.state.session - 1}&id=${id}`)\n      .then(res => {\n        console.log(oldSession, id)\n        if (res.data !== null) {\n          // console.log(res.data)\n          var links = (res.data).length > 0 ? res.data[0].links : []\n          var linkMap = new Map();\n          for (var i=0; i<links.length; i++) {\n            linkMap.set(links[i][0], links[i][1])\n          }\n          this.setState({ \n            links: linkMap\n          });\n        }\n      })\n    }\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    const val = this.state.value;\n    var queries = this.state.queries;\n    queries.push(val);   \n    var colors = this.getRandomColor(val)\n    axios.get(`https://ir-sim-api.herokuapp.com/search?name=${this.state.value}`)\n      .then(res => {\n        const data = res.data.data;\n        const descriptions = res.data.descriptions\n        this.setState({ \n          data: this.updateJson(data, descriptions),\n          // value: \"\",\n          submitted: true,\n          colors: colors,\n          lastQuery: val,\n          isResults: true,\n          desc: \"\",\n          queries: queries\n        });\n        if (data === {}) {\n          this.setState({\n            submitted: false\n          })\n        }\n      })\n    event.preventDefault();\n  }\n\n\n  handleDescription = (text) => (event) => {\n    var split = text.split(\" . \");\n    var title = toTitleCase(split[0]);\n    // var title = split[0];\n    var views = this.state.views;\n    views.push(title);\n    console.log(views)\n    var description = capitalizeFirstLetter(split.slice(2,-1)).join(\". \") + \".\";\n    this.setState({\n      isResults: false,\n      title: title,\n      text: description,\n      views: views\n    })\n    event.preventDefault();\n  }\n\n  //go back to main search results\n  handleBack(event) {\n    this.setState({\n      isResults: true,\n      title: \"\",\n      text: \"\"\n    })\n    event.preventDefault();\n  }\n\n  //add favorite links\n  handleFavorites = (title, description) => (event) => {\n    var links = this.state.links;\n    if (links.has(title)) {\n      links.delete(title);\n    } else {\n      links.set(title, description);\n    }\n    this.setState({\n      links: links\n    });\n    event.preventDefault();\n  }\n\n  getStarStyles(title) {\n    var links = this.state.links;\n    if (links.has(title)) {\n      return 'warning';\n    } else { \n      return 'primary';\n    }\n  }\n  \n  renderButton(title, description) {\n    if (title !== \"\") {\n      return(\n        <Button\n          onClick={this.handleFavorites(title, description)}\n          bsStyle={this.getStarStyles(title)}\n          bsSize=\"xsmall\"\n        >\n          <Glyphicon glyph=\"star\" />\n        </Button>\n      );\n    }\n  }\n\n  renderSideBar() {\n    var links = this.state.links;\n    var newLinks = []\n    if (links !== null) {\n      for (let [k, v] of links) {\n        newLinks.push({\n          \"title\": k,\n          \"description\": v\n        })\n      }  \n    }\n    \n    var j = 0;\n    return (\n      <div className=\"sidebar\">\n        <Menu width={ '75%' }>\n        <ul className=\"search-results\">\n        <li><b>\n        What are the structural and aeroelastic problems associated with flight of high speed aircraft?\n        This includes problems with nozzle design, acoustics, and increasing the mach number.\n        </b></li><br />\n          {\n            newLinks.map(r => (\n              <li key={j++}>\n              {/* <section className=\"container\"> */}\n                <div className=\"star\">\n                  {this.renderButton(r.title, r.description)}\n                </div>\n                <div className=\"one-sidebar\">\n                  <p className=\"results\" onClick={this.handleDescription(r.description)}>{r.title}</p>\n                  <p>{r.description.replace(/(([^\\s]+\\s\\s*){40})(.*)/,\"$1…\") /* first 50 words*/}</p> \n                </div>\n                <div className=\"clear\"></div>\n              {/* </section>    */}\n              </li>\n            ))\n          }\n          </ul>\n        </Menu>\n      </div>\n    )\n  }\n\n  renderResults() {\n    if (this.state.data.length === 1) {\n      return (\n      <ul className=\"search-results\">\n        <li key={0}>\n          <section className=\"container\">\n            <div className=\"noResult\">\n              <p>{\"No results found\"}</p>\n            </div>\n          </section>\n        </li>\n      </ul>\n      )\n    }\n    if (this.state.isResults && this.state.bars){\n      return (\n        <ul className=\"search-results\">\n          {\n            this.state.data.map(r => (\n              <li key={r.id}>\n              <section className=\"container\">\n                <div className=\"star\">\n                  {this.renderButton(r.title, r.description)}\n                </div>\n                <div className=\"one\">\n                  <p className=\"results\" onClick={this.handleDescription(r.description)}>{r.title}</p>\n                  <p>{r.description.replace(/(([^\\s]+\\s\\s*){40})(.*)/,\"$1…\") /* first 50 words*/}</p> \n                </div>\n                <div className=\"two\">\n                  {console.log(createDataSet(this.state.lastQuery, r.weights,this.state.colors))}\n                  <HorizontalBar data={createDataSet(this.state.lastQuery, r.weights,this.state.colors)} options={getOptions(r.id, this.state.data)} width={.1} height={getHeight(r.id)}/>\n                </div>\n                <div className=\"clear\"></div>\n              </section>   \n              </li>\n            ))\n          }\n          </ul>\n      )\n\n    } else if (this.state.isResults && !this.state.bars) {\n      return (\n        <ul className=\"search-results\">\n          {\n            this.state.data.map(r => (\n              <li key={r.id}>\n              <section className=\"container\">\n                <div className=\"star\">\n                  {this.renderButton(r.title, r.description)}\n                </div>\n                <div className=\"one\">\n                  <p className=\"results\" onClick={this.handleDescription(r.description)}>{r.title}</p>\n                  <p>{r.description.replace(/(([^\\s]+\\s\\s*){40})(.*)/,\"$1…\") /* first 50 words*/}</p> \n                </div>\n                <div className=\"clear\"></div>\n              </section>   \n              </li>\n            ))\n          }\n          </ul>\n      )\n    } else {\n      return(\n        <div className=\"text-container\">\n          <button onClick={this.handleBack}>\n            Back\n          </button>\n          <h3>{this.state.title}</h3>\n          <p>{this.state.text}</p> \n        </div>\n      )\n    }\n  }\n  updateJson(data, descriptions) {\n    var oldData = data;\n    var newData = [];\n    var id = 1;\n    var sortable = [];\n\n    //sort based on highest values\n    var key_id = 0;\n    for (var key in oldData) {\n      var weights = oldData[key];\n      var tot = 0.0;\n      for (var w in weights) {\n        weights[w] = Math.abs(Math.round(100*weights[w])/100)\n        tot += weights[w];\n      }\n      sortable.push([key, tot, descriptions[key_id]]);\n      key_id++;\n    }\n\n    //sort based on weights\n    sortable.sort(function(a, b) {\n      return b[1] - a[1];\n    });\n    for (var i=0; i<sortable.length; i++) {\n      newData.push({\n        \"id\": id++,\n        \"title\": sortable[i][0],\n        \"description\": sortable[i][2],\n        \"weights\": oldData[sortable[i][0]]\n      })\n    }\n    //insert empty index for first index\n    newData.unshift({\n      \"id\": 0,\n      \"title\": \"\",\n      \"description\": \"\",\n      \"weights\": {}\n    })\n    return newData;\n  }\n\n  //get random colors for bar graph\n  getRandomColor(query) {\n    var dict = {};\n    var splitQuery = query.toLowerCase();\n    var words = splitQuery.split(\" \");\n    words = [...new Set(words)]; \n    for(var i = 0; i<words.length; i++) {\n      var r = Math.round(Math.random() * 255);\n      var g = Math.round(Math.random() * 255);\n      var b = Math.round(Math.random() * 255);\n      dict[words[i]] = 'rgba(' + r + ',' + g + ',' + b + ',1)';\n    }\n    return dict;\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"search\">\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              <input type=\"text\" value={this.state.value} onChange={this.handleChange} style={{width: \"400px\", height: \"25px\"}}/>\n            </label>\n            <input type=\"submit\" value=\"Search\" style={{width: \"75px\", height: \"25px\"}}/>\n          </form>\n        </div>\n        {this.renderSideBar()}\n        {this.state.submitted && this.renderResults()}\n      </div>\n      \n    );\n  }\n}\n\nexport default SearchBar;","import React from 'react';\nimport SearchBar from './components/SearchBar';\nimport './components/Styles.css';\nimport axios from 'axios'\n\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nfunction getParameterByName(name, url) {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n    results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.startTime = null;\n    this.ref = React.createRef();\n    this.id = null;\n    this.session = null;\n  }\n\n  componentDidMount() {\n    var numCorrect = getParameterByName(\"correct\", window.location.href);\n    if (numCorrect != null) {\n      alert(\"You got \" + numCorrect + \" question(s) correct\")\n    }\n  }\n  componentWillMount() {\n    var startTime = new Date();\n    var id = this.getParameterByName('id');\n    if (id === null) {\n      id = uuidv4()\n    }\n    var session = this.getParameterByName('session');\n    this.setState({\n      startTime: startTime,\n      id: id,\n      session: session\n    })\n    \n  }\n  getParameterByName(name, url) {\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n\n  handleClick(event) {\n    if(window.confirm(\"WARNING: The queries you search for, links you favorite, and time it takes for you to complete the experiment are all recorded. If it appears that you have not made an honest attempt at the experiment, your experiment will be rejected.\")) {\n      if (window.confirm(\"Have you starred documents you found relevant?\") && window.confirm(\"Are you finished with the study? (After you hit confirm, you are not allowed to return back to this page)\")) {\n        var id = this.state.id;\n        var currTime = new Date();\n        var diff = Math.abs(currTime - this.state.startTime)\n        var links = Array.from(this.ref.current.state.links);\n        var queries = Array.from(this.ref.current.state.queries)\n        var views = Array.from(this.ref.current.state.views)\n        var session = this.state.session;\n        if (session === null) {\n          session = 1;\n        } else {\n          session = parseInt(session);\n        }\n        var body = {\n          id: id,\n          links: links,\n          session: session,\n          queries: queries,\n          views: views,\n          time: diff\n        }\n        axios.post(`https://ir-sim.herokuapp.com/links`, body)\n        // axios.post(`localhost:9000/links`, body)\n        .then(res => {\n        \n        window.location = `/verify?id=${id}&time=${diff}&session=${session}`;\n        })\n      }\n    }\n    \n    \n    event.preventDefault();\n  }\n  render() {\n    return (\n      <div className=\"app\">\n        <h1 className=\"title\">Search Engine</h1>\n        <button onClick={this.handleClick}>Finished with Study</button>\n        <SearchBar ref={this.ref} session={this.state.session}/>\n      </div>\n\n    );\n  }\n  \n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}